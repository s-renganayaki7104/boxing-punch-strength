# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15abq_BgVA9QT4yjm2xNj0MnZsOLZATZa
"""

import streamlit as st
import tensorflow as tf
import numpy as np
import pickle

# Load the trained model
model = tf.keras.models.load_model('./punch_strength_model.keras')  # Fixed path

# Load the label encoder
with open('label_encoder.pkl', 'rb') as file:
    label_encoder = pickle.load(file)

# Define the prediction function
def predict_strength(speed, force):
    # Prepare the input data for prediction
    input_data = np.array([[speed, force]])

    # Predict the class (0: Weak, 1: Medium, 2: Strong)
    prediction = model.predict(input_data)
    predicted_class = np.argmax(prediction, axis=1)

    # Convert the predicted class index to the label
    predicted_label = label_encoder.inverse_transform(predicted_class)

    return predicted_label[0]

# Streamlit UI
st.title("Punch Strength Classifier")
st.write("This app predicts the punch strength based on speed and force.")

# Input fields for speed and force
speed = st.number_input("Enter the speed (m/s):", min_value=0.0, value=7.5)
force = st.number_input("Enter the force (N):", min_value=0.0, value=300.0)

# Button to make the prediction
if st.button("Predict Punch Strength"):
    result = predict_strength(speed, force)
    st.success(f"The predicted punch strength is: {result}")
